version: "3"
services:
  flask_app:
    build: ./
    ports:
      - "10000:5000"
    container_name: flask
    secrets:
      - mysql_password
    environment:
      - DD_AGENT_HOST=host.docker.internal
      - DD_TRACE_AGENT_PORT=8126
      - DD_SERVICE=flask
      - DD_ENV=fairview
      - DD_VERSION=1.0
      - MYSQL_USER=mysql
      - MYSQL_DATABASE=real_estate
      - MYSQL_PASSWORD=/run/secrets/mysql_password
  db:
    image: mysql:latest
    container_name: mysql
    volumes:
      # this volume keeps data persistent
      - ./dbdata/db:/var/lib/mysql
      # this volume initializes the database with the sql schema file
      - ./dbdata/init-script.sql:/docker-entrypoint-initdb.d/init-script.sql
    restart: always
    ports:
      - 3306:3306
    secrets:
      - mysql_password
      - mysql_root_password
    # The environment variables read into the container by the mysql
    # image is specially built to understand the _FILE ending which
    # tells the image to read in the values from the files in the
    # /run/secrets in-memory temporary filesystem and then use those
    # values to populate the environment variable without the _FILE
    # ending, for example: the value in the file shown in 
    # MYSQL_PASSWORD_FILE is used to set the MYSQL_PASSWORD variable
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
      - MYSQL_USER=mysql
      - MYSQL_DATABASE=real_estate

# This is where the password values are kept secret in files 
# on the host system that need to exist to be read in when
# the mysql image is used to start up in a container.
secrets:
  mysql_password:
    file: ./secrets/mysql_password
  mysql_root_password:
    file: ./secrets/mysql_root_password
